"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[509],{6331:(e,a,o)=>{o.r(a),o.d(a,{default:()=>h});var n=o(6252);const s=(0,n._)("h2",{id:"installation",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#installation","aria-hidden":"true"},"#"),(0,n.Uk)(" Installation")],-1),t=(0,n._)("h3",{id:"cargo",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#cargo","aria-hidden":"true"},"#"),(0,n.Uk)(" Cargo")],-1),c=(0,n.Uk)("Cocogitto is available on "),l={href:"https://crates.io/crates/cocogitto",target:"_blank",rel:"noopener noreferrer"},i=(0,n.Uk)("crates.io"),r=(0,n.Uk)(" :"),p=(0,n.uE)('<div class="language-bash ext-sh"><pre class="language-bash"><code>cargo <span class="token function">install</span> cocogitto\n</code></pre></div><h3 id="archlinux" tabindex="-1"><a class="header-anchor" href="#archlinux" aria-hidden="true">#</a> Archlinux</h3><div class="language-bash ext-sh"><pre class="language-bash"><code>yay -S cocogitto-bin\n</code></pre></div><h2 id="shell-completions" tabindex="-1"><a class="header-anchor" href="#shell-completions" aria-hidden="true">#</a> Shell completions</h2><p>Before getting started you might want to install shell completions for <code>cog</code> and <code>coco</code> commands. Supported shells are <code>bash</code>, <code>elvish</code>, <code>fish</code> and <code>zsh</code>.</p><p>Example installing completions:</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token comment"># Bash</span>\ncog generate-completions <span class="token function">bash</span> <span class="token operator">&gt;</span> ~/.local/share/bash-completion/completions/cog\ncoco generate-completions <span class="token function">bash</span> <span class="token operator">&gt;</span> ~/.local/share/bash-completion/completions/coco\n\n<span class="token comment"># Bash (macOS/Homebrew)</span>\ncog generate-completions <span class="token function">bash</span> <span class="token operator">&gt;</span> <span class="token variable"><span class="token variable">$(</span>brew --prefix<span class="token variable">)</span></span>/etc/bash_completion.d/cog.bash-completion\ncoco generate-completions <span class="token function">bash</span> <span class="token operator">&gt;</span> <span class="token variable"><span class="token variable">$(</span>brew --prefix<span class="token variable">)</span></span>/etc/bash_completion.d/coco.bash-completion\n\n<span class="token comment"># Fish</span>\n<span class="token function">mkdir</span> -p ~/.config/fish/completions\ncog generate-completions fish <span class="token operator">&gt;</span> ~/.config/fish/completions/cog.fish\ncoco generate-completions fish <span class="token operator">&gt;</span> ~/.config/fish/completions/coco.fish\n\n<span class="token comment"># Zsh</span>\ncog generate-completions <span class="token function">zsh</span> <span class="token operator">&gt;</span> ~/.zfunc/_cog\ncoco generate-completions <span class="token function">zsh</span> <span class="token operator">&gt;</span> ~/.zfunc/_coco\n</code></pre></div>',7),h={render:function(e,a){const o=(0,n.up)("OutboundLink");return(0,n.wg)(),(0,n.iD)(n.HY,null,[s,t,(0,n._)("p",null,[c,(0,n._)("a",l,[i,(0,n.Wm)(o)]),r]),p],64)}}},5017:(e,a,o)=>{o.r(a),o.d(a,{data:()=>n});const n={key:"v-8daa1a0e",path:"/",title:"",lang:"en-US",frontmatter:{home:!0,heroImage:"https://v1.vuepress.vuejs.org/hero.png",tagline:"CLI and automation for the conventional commits and SemVer specification.",actionText:"Getting Started →",actionLink:"/guide/",features:[{title:"Verified commits️",details:"Create conventional compliant commits at ease"},{title:"Automatic Version bump and changelog",details:"Automatically bump version and changelog generation with your own custom steps and workflows."},{title:"Release profiles",details:"Your branching model requires different steps for releases, prerelease, hotfix ? We got you covered"},{title:"No dependency",details:"Cocogitto has two standalone binary, the only system dependency is git"},{title:"Conventional git log",details:"Search your commit history matching conventional commit items such as scope and commit type."},{title:"Enforce conventional commits via github actions",details:"Check your commit compliance on every push to the remote and create release from your CI pipeline"}],footer:"MIT Licensed | Copyright © 2020 Paul Delafosse"},excerpt:"",headers:[{level:2,title:"Installation",slug:"installation",children:[{level:3,title:"Cargo",slug:"cargo",children:[]},{level:3,title:"Archlinux",slug:"archlinux",children:[]}]},{level:2,title:"Shell completions",slug:"shell-completions",children:[]}],filePathRelative:"index.md",git:{contributors:[{name:"Paul Delafosse",email:"paul.delafosse@protonmail.com",commits:1}]}}}}]);